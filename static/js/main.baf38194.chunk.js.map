{"version":3,"sources":["components/Table.js","App.js","serviceWorker.js","index.js"],"names":["Table","rename","player","name","prompt","length","document","getElementById","innerHTML","console","log","alert","_this2","this","react_default","a","createElement","rowSpan","href","onClick","className","id","props","state","first","upLvl","downLvl","second","third","fourth","Component","App","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","setState","components_Table","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.baf38194.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nclass Table extends Component {\n  rename = (player) => {\n    var name = prompt(\"Set new name:\") || \"Player\" + player;\n    if(name.length <= 7) {\n      switch(player) {\n        case 1:\n          document.getElementById(\"first-name\").innerHTML = name + ':';\n          break;\n        case 2:\n          document.getElementById(\"second-name\").innerHTML = name + ':';\n          break;\n        case 3:\n          document.getElementById(\"third-name\").innerHTML = name + ':';\n          break;\n        case 4:\n          document.getElementById(\"fourth-name\").innerHTML = name + ':';\n          break;\n        default:\n          console.log(\"rename: default\");\n      }\n    } else {\n      alert(\"Max name length is 7, sorry\");\n    }\n  }\n\n  render() {\n    return(\n      <table>\n          <tbody>\n            <tr>\n              <td rowSpan=\"2\">\n                <a href=\"#\" onClick={ () => { this.rename(1) } } className=\"pencil\">&#x270E;</a>\n              </td>\n              <td rowSpan=\"2\" id=\"first-name\">\n                First:\n              </td>\n              <td rowSpan=\"2\">{ this.props.state.first }</td>\n              <td><a href=\"#\" onClick={ () => { this.props.upLvl(1) } }>▲</a></td>\n            </tr>\n            <tr>\n              <td><a href=\"#\" onClick={ () => { this.props.downLvl(1) } }>▼</a></td>\n            </tr>\n            <tr>\n              <td rowSpan=\"2\">\n                <a href=\"#\" onClick={ () => { this.rename(2) } } className=\"pencil\">&#x270E;</a>\n              </td>\n              <td rowSpan=\"2\" id=\"second-name\">Second:</td>\n              <td rowSpan=\"2\">{ this.props.state.second }</td>\n              <td><a href=\"#\" onClick={ () => { this.props.upLvl(2) } }>▲</a></td>\n            </tr>\n            <tr>\n              <td><a href=\"#\" onClick={ () => { this.props.downLvl(2) } }>▼</a></td>\n            </tr>\n            <tr>\n              <td rowSpan=\"2\">\n                <a href=\"#\" onClick={ () => { this.rename(3) } } className=\"pencil\">&#x270E;</a>\n              </td>\n              <td rowSpan=\"2\" id=\"third-name\">Third:</td>\n              <td rowSpan=\"2\">{ this.props.state.third }</td>\n              <td><a href=\"#\" onClick={ () => { this.props.upLvl(3) } }>▲</a></td>\n            </tr>\n            <tr>\n              <td><a href=\"#\" onClick={ () => { this.props.downLvl(3) } }>▼</a></td>\n            </tr>\n            <tr>\n              <td rowSpan=\"2\">\n                <a href=\"#\" onClick={ () => { this.rename(4) } } className=\"pencil\">&#x270E;</a>\n              </td>\n              <td rowSpan=\"2\" id=\"fourth-name\">Fourth:</td>\n              <td rowSpan=\"2\">{ this.props.state.fourth }</td>\n              <td><a href=\"#\" onClick={ () => { this.props.upLvl(4) } }>▲</a></td>\n            </tr>\n            <tr>\n              <td><a href=\"#\" onClick={ () => { this.props.downLvl(4) } }>▼</a></td>\n            </tr>\n          </tbody>\n        </table>\n    );\n  }\n}\n\nexport default Table;\n","import React, { Component } from 'react';\nimport './App.css';\nimport Table from './components/Table';\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      first: 1,\n      second: 1,\n      third: 1,\n      fourth: 1\n    };\n  }\n\n  upLvl = (player) => {\n    switch(player) {\n      case 1:\n        if(this.state.first < 10)\n          this.setState({ first: ++this.state.first});\n        break;\n      case 2:\n        if(this.state.second < 10)\n          this.setState({ second: ++this.state.second});\n        break;\n      case 3:\n        if(this.state.third < 10)\n          this.setState({ third: ++this.state.third});\n        break;\n      case 4:\n        if(this.state.fourth < 10)\n          this.setState({ fourth: ++this.state.fourth});\n        break;\n      default:\n        console.log(\"upLvl: default\");\n    }\n  }\n\n  downLvl = (player) => {\n    switch(player) {\n      case 1:\n        if(this.state.first > 1)\n          this.setState({ first: --this.state.first});\n        break;\n      case 2:\n        if(this.state.second > 1)\n          this.setState({ second: --this.state.second});\n        break;\n      case 3:\n        if(this.state.third > 1)\n          this.setState({ third: --this.state.third});\n        break;\n      case 4:\n        if(this.state.fourth > 1)\n          this.setState({ fourth: --this.state.fourth});\n        break;\n      default:\n        console.log(\"downLvl: default\");\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Table state={ this.state } upLvl={ this.upLvl } downLvl={ this.downLvl } />\n        <br />\n        <a id=\"new\" href=\"#\" onClick={ () => {\n              this.setState({\n                first: 1,\n                second: 1,\n                third: 1,\n                fourth: 1\n              });\n            }\n          }>\n          New game\n        </a>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}